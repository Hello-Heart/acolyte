(function(e){var t=function(){},n=e("#go-back"),r=e("#behaviour .list-group"),i=e("#behaviour h2 .fa"),s=e("#config h2 .fa"),o=e("#queries"),u=e(".list-group",o),a=e("#updates"),f=e(".list-group",a),l={string:"Text","float":"Number",date:"Date"},c={string:"String","float":"Float",date:"Date"},h=e("#execute .btn-primary"),p=e("#execute .form-group"),d=e("#statement"),v=e("#result"),m=e("#result .panel-collapse"),g=e('input[name="json"]'),y=e("#add-param"),b=e("#execute ol"),w=e("#param-type"),E=function(t){return function(){var n=e(this);if(!t(n)){n.addClass("has-error");y.attr("disabled","disabled")}else{n.removeClass("has-error");if(e("#execute li").length<3)y.removeAttr("disabled");else y.attr("disabled","disabled")}}},S=function(t){return e.isNumeric(t.val())},x=function(t){return e.trim(t.val())==""?false:true},T=E(x),N=E(S),C={title:"Expected value parameter",trigger:"focus"},k=function(){var t=e('<input type="text" class="form-control" id="param-value" />').tooltip(C).on("keyup change",T);e("#param-value").replaceWith(t)},L=function(t){return e('<p class="simple-result">Error = <tt class="text-info">'+t+"</tt></p>")},A=function(t){return e('<p class="simple-result">Update count = <tt class="text-info">'+t+"</tt></p>")},O=function(t){var n=t.schema,r=t.rows,i=e("<div></div>"),s=e('<table class="table table-striped table-bordered table-responsive"></table>').appendTo(i),o=e("<tr></tr>").appendTo(e("<thead></thead>").appendTo(s)),u=e("<tbody></tbody>").appendTo(s);e.each(n,function(t,n){e("<th>"+n.name+" ("+l[n._type]+")</th>").appendTo(o)});e.each(r,function(t,n){var r=e("<tr></tr>"),i;for(i=0;i<n.length;i++){e("<td>"+n[i]+"</td>").appendTo(r)}u.append(r)});return i},M=function(t,n,r,i,s,o){var u=e('<p>Pattern = <tt class="text-info">'+n.pattern.expression+"</tt></p>"),a=r().append(u),f=null;if(n.pattern["parameters"]&&n.pattern.parameters["length"]&&n.pattern.parameters.length>0){var l=e('<table class="table table-striped"><thead><tr><th>Type</th><th>Value</th></thead></table>'),c=e("<tbody></tbody>").appendTo(l);f=e("<div>Parameter constraints</div>").append(l);e.each(n.pattern.parameters,function(t,n){e("<tr><td>"+n._type+"</td><td>"+n.value+"</td></tr>").appendTo(c)})}else f=e("<em>No parameter constraint</em>");if(n.result["error"])i(u,n.result["error"]);else if(n._type=="update")s(u,n.result["updateCount"]);else o(u,n.result);return a.popover({placement:"top",trigger:"hover",html:true,content:f})},_=e("#behaviour .panel-collapse"),D=function(t){e("html").animate({scrollTop:_.parent().offset().top});if(!_.hasClass("in"))_.collapse("toggle");e(".route"+t,_).addClass("list-group-item-success");return false};e.each(l,function(e,t){w.append('<option value="'+e+'">'+t+"</option>")});k();e(".has-tooltip").tooltip();e("a",n).click(function(){n.trigger("submit");return false});e("#behaviour h2 > a").click(function(){if(i.hasClass("fa-caret-right")){i.removeClass("fa-caret-right").addClass("fa-caret-down")}else i.removeClass("fa-caret-down").addClass("fa-caret-right")});e("#config h2 > a").click(function(){if(s.hasClass("fa-caret-right")){s.removeClass("fa-caret-right").addClass("fa-caret-down")}else s.removeClass("fa-caret-down").addClass("fa-caret-right")});var P=function(){return e('<li class="list-group-item"></li>')},H=function(e,t){L(t).insertAfter(e.prepend('<i class="fa fa-angle-right"></i>').css({display:"inline"}))},B=function(e,t){A(t).insertAfter(e.prepend('<i class="fa fa-angle-right"></i>').css({display:"inline"}))},j=function(t,n){var r=O(n).collapse("toggle").insertAfter(t),i=e('<i class="fa fa-caret-right"></i>').prependTo(t);t.css({cursor:"pointer"}).click(function(){if(i.hasClass("fa-caret-right")){i.removeClass("fa-caret-right").addClass("fa-caret-down")}else{i.removeClass("fa-caret-down").addClass("fa-caret-right")}r.collapse("toggle")})};e.each(e._connection,function(e,t){var n=M(e,t,P,H,B,j).addClass("route"+e);if(t._type=="update")f.append(n);else u.append(n)});if(e(".list-group-item",u).length>0)o.css({display:"block"});if(e(".list-group-item",f).length>0)a.css({display:"block"});d.on("change keyup",function(){var t=e.trim(d.val());if(t==""){p.addClass("has-warning");h.attr("disabled","disabled")}else{p.removeClass("has-warning");h.removeAttr("disabled")}});h.click(function(){v.removeClass("panel-default").addClass("panel-info");if(!m.hasClass("in"))m.collapse("toggle");e(".list-group-item-success",_).removeClass("list-group-item-success");var n=[];b.children().each(function(t,r){var i=e(r);n.push({_type:i.data("type"),value:i.data("value")})});e._ajax({url:"./exec-stmt",type:"POST",cache:false,dataType:"json",data:{json:g.val(),statement:d.val(),parameters:JSON.stringify(n)}},function(n){var r=e(".panel-body",v).empty().append('<p class="text-muted">No result</p>');if(!n||typeof n["route"]!="number")return;var i=e._connection[n.route],s=e("<p><strong>Selected route:</strong> </p>").append(e('<a href="#behaviour">(see Connection behaviour)</a>').click(function(){D(n.route)})),o=M(n.route,i,function(){return e("<p></p>")},t,t,t).appendTo(e("<div></div>").appendTo(r.empty().append(s))).addClass("route");var u=e("<div></div>").appendTo(r.append("<p><strong>Effective result:</strong></p>"));if(n["warning"]){L(n["errorCode"]&&n.errorCode>0?n.warning.reason+" ("+n.errorCode+")":n.warning.reason).appendTo(u)}else if(n["updateCount"]){A(n.updateCount).appendTo(u)}else if(n["schema"]&&n["rows"]){O(n).appendTo(u)}e("html").animate({scrollTop:v.offset().top})},function(t){e("html").animate({scrollTop:v.offset().top});if(typeof t=="string"&&t.indexOf("No route handler")!=-1){m.html("<em>No matching route</em>");return true}m.html("<p><strong>Raised error:</strong> <tt>"+t+"</tt></p>");return true});return false});var F=e("#java .code").append('<div><span class="kn">import</span> <span class="nn">java.util.Arrays</span><span class="o">;</span></div><div><span class="kn">import</span> <span class="nn">java.util.Date</span><span class="o">;</span></div><div><span class="kn">import</span> <span class="nn">java.util.List</span><span class="o">;</span></div><div><span class="kn">import</span> <span class="nn">java.util.regex.Pattern</span><span class="o">;</span></div><div><span class="kn">import</span> <span class="nn">java.text.SimpleDateFormat</span><span class="o">;</span></div><div><span class="kn">import</span> <span class="nn">java.sql.Connection</span><span class="o">;</span></div><div><span class="kn">import</span> <span class="nn">java.sql.DriverManager</span><span class="o">;</span></div><div><span class="kn">import</span> <span class="nn">acolyte.CompositeHandler</span><span class="o">;</span></div><div><span class="kn">import</span> <span class="nn">acolyte.StatementHandler</span><span class="o">;</span></div><div><span class="kn">import</span> <span class="nn">acolyte.StatementHandler.Parameter</span><span class="o">;</span></div><div><span class="kn">import</span> <span class="nn">acolyte.ParameterMetaData</span><span class="o">;</span></div><div><span class="kn">import</span> <span class="nn">acolyte.QueryResult</span><span class="o">;</span></div><div><span class="kn">import</span> <span class="nn">acolyte.RowLists</span><span class="o">;</span></div><div><span class="kn">import</span> <span class="nn">acolyte.UpdateResult</span><span class="o">;</span></div><div><span class="kn">import</span> <span class="kd">static</span> <span class="nn">acolyte.RowList.Column</span><span class="o">;</span></div><div>&nbsp;</div><div><span class="kd">final</span> <span class="n">String</span> <span class="n">jdbcUrl</span> <span class="o">=</span> <span class="s">"jdbc:acolyte:anything-you-want?handler=my-unique-id"</span><span class="o">;</span></div><div>&nbsp;</div><div><span class="kd">final</span> <span class="n">SimpleDateFormat</span> <span class="n">dateFormat</span> <span class="o">=</span> <span class="k">new</span> <span class="n">SimpleDateFormat</span><span class="o">(</span><span class="s">"yyyy-MM-dd"</span><span class="o">,</span> <span class="n">java</span><span class="o">.</span><span class="na">util</span><span class="o">.</span><span class="na">Locale</span><span class="o">.</span><span class="na">ENGLISH</span><span class="o">);</span></div><div>&nbsp;</div><div><span class="n">StatementHandler</span> <span class="n">handler</span> <span class="o">=</span> <span class="k">new</span> <span class="n">CompositeHandler</span><span class="o">().</span></div>'),I=e('<div>    <span class="n">withQueryHandler</span><span class="o">(</span><span class="k">new</span> <span class="n">CompositeHandler</span><span class="o">.</span><span class="na">QueryHandler</span><span class="o">()</span> <span class="o">{</span></div>').appendTo(F),q=e("#scala .code").append('<div><span class="k">import</span> <span class="nn">java.util.Locale</span></div><div><span class="k">import</span> <span class="nn">java.sql.</span><span class="o">{</span> <span class="nc">DriverManager</span> <span class="o">}</span></div><div><span class="k">import</span> <span class="nn">acolyte.</span><span class="o">{</span> <span class="nc">ExecutedStatement</span><span class="o">,</span> <span class="nc">ExecutedParameter</span><span class="o">,</span> <span class="nc">Driver</span> <span class="k">â‡’</span> <span class="nc">AcolyteDriver</span><span class="o">,</span> <span class="nc">QueryExecution</span><span class="o">,</span> <span class="nc">QueryResult</span><span class="o">,</span> <span class="nc">UpdateExecution</span><span class="o">,</span><span class="nc">UpdateResult</span> <span class="o">}</span></div><div><span class="k">import</span> <span class="nn">acolyte.RowLists.</span><span class="o">{</span> <span class="n">rowList1</span><span class="o">,</span> <span class="n">rowList2</span><span class="o">,</span> <span class="n">rowList3</span> <span class="o">}</span></div><div><span class="k">import</span> <span class="nn">acolyte.Acolyte</span> <span class="c1">// DSL</span></div><div><span class="k">import</span> <span class="nn">acolyte.Implicits._</span></div><div>&nbsp;</div><div><span class="k">val</span> <span class="n">dateFormat</span> <span class="k">=</span> <span class="k">new</span> <span class="n">java</span><span class="o">.</span><span class="n">text</span><span class="o">.</span><span class="nc">SimpleDateFormat</span><span class="o">(</span><span class="s">"yyyy-MM-dd"</span><span class="o">,</span> <span class="nc">Locale</span><span class="o">.</span><span class="nc">ENGLISH</span><span class="o">)</span></div><div>&nbsp;</div><div><span class="k">val</span> <span class="n">jdbcUrl</span> <span class="k">=</span> <span class="s">"jdbc:acolyte:anything-you-want?handler=my-unique-id"</span></div><div>&nbsp;</div><div><span class="c1">// Prepare handler</span></div><div><span class="k">val</span> <span class="n">handler</span> <span class="o">=</span> <span class="nc">Acolyte</span><span class="o">.</span><span class="n">handleStatement</span><span class="o">.</span></div>'),R=e('<div>  <span class="n">withQueryHandler</span> <span class="o">{</span> <span class="n">e</span><span class="k">:</span> <span class="kt">QueryExecution</span> <span class="k">â‡’</span></div>').appendTo(q);e('<div>    <span class="kt">e</span> <span class="kt">match</span> <span class="o">{</span></div>').appendTo(q);var U=e('<div>    <span class="o">}</span></div>').appendTo(q);e('<div>  <span class="o">}</span> <span class="n">withUpdateHandler</span> <span class="o">{</span> <span class="n">e</span><span class="k">:</span> <span class="kt">UpdateExecution</span> <span class="k">â‡’</span></div><div>    <span class="kt">e</span> <span class="kt">match</span> <span class="o">{</span></div>').appendTo(q);e('<div>            <span class="kd">public</span> <span class="n">QueryResult</span> <span class="nf">apply</span><span class="o">(</span><span class="n">String</span> <span class="n">sql</span><span class="o">,</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">Parameter</span><span class="o">&gt;</span> <span class="n">parameters</span><span class="o">)</span> <span class="o">{</span></div>').appendTo(F);var z=e('<div>    <span class="o">}</span></div>').appendTo(q);e('<div>  <span class="o">}</span></div><div>&nbsp;</div><div><span class="c1">// Register prepared handler with expected ID '+"'my-handler-id'"+'</span></div><div><span class="nc">AcolyteDriver</span><span class="o">.</span><span class="n">register</span><span class="o">(</span><span class="s">"my-handler-id"</span><span class="o">,</span> <span class="n">handler</span><span class="o">)</span></div><div>&nbsp;</div><div><span class="c1">// ... then connection is managed through |handler|</span></div><div><span class="nc">DriverManager</span><span class="o">.</span><span class="n">getConnection</span><span class="o">(</span><span class="n">jdbcUrl</span><span class="o">)</span></div>').appendTo(q);var W=e('<div>                <span class="k">throw</span> <span class="k">new</span> <span class="nf">RuntimeException</span><span class="o">(</span><span class="s">"Unsupported JDBC query"</span><span class="o">);</span></div>').appendTo(F);F.append('<div>            <span class="o">}</span></div><div>        <span class="o">}).</span></div><div>    <span class="n">withUpdateHandler</span><span class="o">(</span><span class="k">new</span> <span class="n">CompositeHandler</span><span class="o">.</span><span class="na">UpdateHandler</span><span class="o">()</span> <span class="o">{</span></div><div>            <span class="kd">public</span> <span class="n">UpdateResult</span> <span class="nf">apply</span><span class="o">(</span><span class="n">String</span> <span class="n">sql</span><span class="o">,</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">Parameter</span><span class="o">&gt;</span> <span class="n">parameters</span><span class="o">)</span> <span class="o">{</span></div>');var X=e('<div>                <span class="k">throw</span> <span class="k">new</span> <span class="nf">RuntimeException</span><span class="o">(</span><span class="s">"Unsupported JDBC update"</span><span class="o">);</span></div>').appendTo(F);e('<div>            <span class="o">}</span></div><div>        <span class="o">});</span></div><div>&nbsp;</div><div><span class="c1">// Register prepared handler with expected ID '+"'my-unique-id'"+'</span></div><div><span class="n">acolyte</span><span class="o">.</span><span class="na">Driver</span><span class="o">.</span><span class="na">register</span><span class="o">(</span><span class="s">"my-unique-id"</span><span class="o">,</span> <span class="n">handler</span><span class="o">);</span></div><div>&nbsp;</div><div><span class="c1">// then when existing code do ...</span></div><div><span class="n">Connection</span> <span class="n">con</span> <span class="o">=</span> <span class="n">DriverManager</span><span class="o">.</span><span class="na">getConnection</span><span class="o">(</span><span class="n">jdbcUrl</span><span class="o">);</span></div>').appendTo(F);e.each(e._connection,function(t,n){var r,i='<div>                <span class="k">if</span> <span class="o">(</span><span class="n">Pattern</span><span class="o">.</span><span class="na">matches</span><span class="o">(</span><span class="s">"'+n.pattern.expression.replace('"','\\"')+'"</span><span class="o">,</span> <span class="n">sql</span><span class="o">)',s='      <span class="kt">case</span> <span class="kt">~</span><span class="o">(</span><span class="kt">ExecutedStatement</span><span class="o">(</span><span class="s">"'+n.pattern.expression.replace('"','\\"')+'"</span><span class="o">),</span> <span class="o">(</span><span class="kt">sql</span><span class="o">,</span> ';ps=null;if(n.pattern["parameters"]&&n.pattern.parameters.length>0){ps='<div>                <span class="kd">final</span> <span class="n">List</span> <span class="n">ps'+t+'</span> <span class="o">=</span> <span class="n">Arrays</span><span class="o">.</span><span class="na">asList</span><span class="o">(</span>';e.each(n.pattern.parameters,function(e,t){if(e>0)ps+=", ";ps+='<span class="n">Parameter</span><span class="o">.</span><span class="na">of</span><span class="o">(</span>';if(t._type=="float"){ps+='<span class="n">ParameterMetaData</span><span class="o">.</span><span class="na">Float</span><span class="o">(</span><span class="mi">'+t.value+'f</span><span class="o">),</span> <span class="mi">'+t.value+'f</span><span class="o">)';s+='<span class="kt">ExecutedParameter</span><span class="o">(</span><span class="mi">'+t.value+'f</span><span class="o">)</span> <span class="kt">::</span> '}else if(t._type=="date"){ps+='<span class="n">ParameterMetaData</span><span class="o">.</span><span class="na">Date</span><span class="o">(),</span> <span class="n">dateFormat</span><span class="o">.</span><span class="na">parse</span><span class="o">(</span><span class="s">"'+t.value+'"</span><span class="o">))';s+='<span class="kt">ExecutedParameter</span><span class="o">(</span><span class="kt">dataFormat.parse</span><span class="o">(</span><span class="s">'+t.value+'</span><span class="o">))</span> <span class="kt">::</span> '}else{ps+='<span class="n">ParameterMetaData</span><span class="o">.</span><span class="na">Str</span><span class="o">,</span> <span class="s">"'+t.value.replace('"','\\"')+'"</span><span class="o">)';s+='<span class="kt">ExecutedParameter</span><span class="o">(</span><span class="s">"'+t.value.replace('"','\\"')+'"</span><span class="o">)</span> <span class="kt">::</span> '}})}s+='<span class="kt">_</span><span class="o">))</span> <span class="k">â‡’</span>';if(ps){r=e(ps+");</span></div>"+i+' <span class="o">&&</span> <span class="n">ps'+t+'</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">parameters</span><span class="o">))</span> <span class="o">{</span></div>')}else r=e(i+") {</span></div>");if(n._type=="query"){e('<div>    <span class="n">withQueryDetection</span><span class="o">(</span><span class="s">"'+n.pattern.expression.replace('"','\\"')+'"</span><span class="o">).</span></div>').insertBefore(I);r.insertBefore(W);e("<div>"+s+"</div>").insertBefore(U);e('<div>  <span class="n">withQueryDetection</span><span class="o">(</span><span class="s">"'+n.pattern.expression.replace('"','\\"')+'"</span><span class="o">).</span></div>').insertBefore(R);if(n.result["error"]){e('<div>                    <span class="k">return</span> <span class="n">QueryResult</span><span class="o">.</span><span class="na">Nil</span><span class="o">.</span><span class="na">withWarning</span><span class="o">(</span><span class="s">"'+n.result.error.replace('"','\\"')+'"</span><span class="o">);</span></div>').insertBefore(W);e('<div>        <span class="nc">QueryResult</span><span class="o">.</span><span class="nc">Nil</span> <span class="n">withWarning</span> <span class="s">"'+n.result.error.replace('"','\\"')+'"</span></div>').insertBefore(U)}else{var o="",u="",a="",f="";e.each(n.result.schema,function(e,t){if(e>0){o+='<span class="o">,</span> ';u+='<span class="o">,</span> '}o+='<span class="n">Column</span><span class="o">(</span><span class="n">'+c[t._type]+'.class</span><span class="o">,</span> <span class="s">"'+t.name.replace('"','\\"')+'"</span><span class="o">)</span>';u+='<span class="n">classOf</span><span class="o">[</span><span class="kt">'+c[t._type]+'</span><span class="o">]</span> <span class="o">-&gt;</span> <span class="s">"'+t.name.replace('"','\\"')+'"</span>'});e.each(n.result.rows,function(t,r){a+='<span class="o">.</span><span class="na">append</span><span class="o">(</span>';f+='<div>          <span class="o">.</span><span class="n">append</span><span class="o">(';e.each(r,function(e,t){var r=n.result.schema[e]._type,i;if(e>0){a+='<span class="o">,</span> ';f+='<span class="o">,</span> '}if(r=="float"){i='<span class="mi">'+t+"f</span>"}else if(r=="date"){i='<span class="n">dateFormat</span><span class="o">.</span><span class="na">parse</span><span class="o">(</span><span class="s">"'+t+'"</span><span class="o">)</span>'}else{i='<span class="s">"'+t.replace('"','\\"')+'"</span>'}a+=i;f+=i});a+='<span class="o">)</span>';f+=")</span></div>"});e('<div>                    <span class="k">return</span> <span class="n">RowLists</span><span class="o">.</span><span class="na">rowList'+n.result.schema.length+'</span><span class="o">(</span>'+o+'<span class="o">)</span>'+a+'<span class="o">.</span><span class="na">asResult</span><span class="o">();</span></div>').insertBefore(W);e('<div>        <span class="n">rowList'+n.result.schema.length+'</span><span class="o">(</span>'+u+'<span class="o">)</span></div>'+f).insertBefore(U)}e('<div>                <span class="o">}</span></div><div>&nbsp;</div>').insertBefore(W);e("<div>&nbsp;</div>").insertBefore(U)}else{r.insertBefore(X);e("<div>"+s+"</div>").insertBefore(z);if(n.result["error"]){e('<div>                    <span class="k">return</span> <span class="n">UpdateResult</span><span class="o">.</span><span class="na">Nothing</span><span class="o">.</span><span class="na">withWarning</span><span class="o">(</span><span class="s">"'+n.result.error.replace('"','\\"')+'"</span><span class="o">);</span></div>').insertBefore(X);e('<div>        <span class="nc">UpdateResult</span><span class="o">.</span><span class="nc">Nothing</span> <span class="n">withWarning</span> <span class="s">"'+n.result.error.replace('"','\\"')+'"</span></div>').insertBefore(z)}else{e('<div>                    <span class="k">return</span> <span class="k">new</span> <span class="nf">UpdateResult</span><span class="o">(</span><span class="mi">'+n.result.updateCount+'</span><span class="o">);</span></div>').insertBefore(X);e('<div>        <span class="mi">'+n.result.updateCount+'</span> <span class="c1">// update count</span></div>').insertBefore(z)}e('<div>                <span class="o">}</span></div><div>&nbsp;</div>').insertBefore(X);e("<div>&nbsp;</div>").insertBefore(z)}});w.change(function(){var t=e(this).val();y.attr("disabled","disabled");if(t=="date"){e("#param-value").replaceWith(e('<input type="text" class="form-control ac-date" id="param-value" readonly="readonly" />').tooltip(C).datepicker({format:"yyyy-mm-dd"}).one("changeDate",function(){y.removeAttr("disabled")}))}else if(t=="float"){e("#param-value").replaceWith(e('<input type="text" class="form-control" id="param-value" />').tooltip(C).on("keyup change",N))}else k()});y.click(function(){var t=w.val(),n=e("#param-value").val(),r=e('<i class="fa fa-minus-circle"></i>');e("<li>"+l[t]+' = <tt class="text-info">'+n+"</tt></li>").prepend(r).data("type",t).data("value",n).appendTo(b).hover(function(){r.css({visibility:"visible"})},function(){r.css({visibility:"hidden"})}).click(function(){y.removeAttr("disabled");e(this).remove()});if(b.children().length==3)y.attr("disabled","disabled");return false})})(jQuery)
